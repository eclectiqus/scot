version: '3.4'
services:
  apache:
    build:
      dockerfile: Dockerfile-Apache
      context: ./
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
    volumes: 
     - "/etc/timezone:/etc/timezone:ro"
     - "/etc/localtime:/etc/localtime:ro"
     - "/var/log/apache2:/var/log/apache2/"
    ports:
     - "443:443"
     - "80:80"
    networks:
     - scot-docker-net
    container_name: apache  
    image: sandialabs/scot_apache
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3

  activemq:
    volumes:
     - "/var/log/activemq:/var/log/activemq/log/"
    build:
      dockerfile: Dockerfile-Activemq
      context: ./ 
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
    networks:
     - scot-docker-net
    container_name: activemq
    image: sandialabs/scot_activemq
  
  mongodb:
    build:
      dockerfile: Dockerfile-Mongodb
      context: ./
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
    volumes:
     - "/etc/timezone:/etc/timezone:ro"
     - "/etc/localtime:/etc/localtime:ro"
     - "/var/lib/mongodb:/var/lib/mongodb/"
     - "/opt/scotbackup/mongo/scot-prod:/opt/scotbackup/mongo/scot-prod/"
     - "/var/log/scot:/var/log/scot/"
    networks:
     - scot-docker-net
    container_name: mongodb
    depends_on: 
     - perl
    image: sandialabs/scot_mongodb

  elastic:
   build:
     dockerfile: Dockerfile-Elastic
     context: ./
     args: 
       http_proxy: ${http_proxy}
       https_proxy: ${https_proxy}
       HTTP_PROXY: ${HTTP_PROXY}
       HTTPS_PROXY: ${HTTPS_PROXY}
   volumes:
     - "/etc/timezone:/etc/timezone:ro"
     - "/etc/localtime:/etc/localtime:ro"
     - "/opt/scotbackup/elastic:/opt/scotbackup/elastic/"
     - "/var/lib/elasticsearch:/var/lib/elasticsearch/"
   networks:
    - scot-docker-net
   container_name: elastic
   image: sandialabs/scot_elastic
 
  scot:
    build:
      dockerfile: Dockerfile-Scot
      context: ./
    volumes:
     - "/var/log/scot:/var/log/scot/"
     - "/etc/timezone:/etc/timezone:ro"
     - "/etc/localtime:/etc/localtime:ro"
     - "/opt/scotfiles:/opt/scotfiles/"
     - "./public/:/opt/scot/public/"
     - "./pubdev/:/opt/scot/pubdev"
     - "/var/lib/elasticsearch:/var/lib/elasticsearch/"
     - "/var/lib/mongodb:/var/lib/mongodb/"
     - "/opt/scotbackup:/opt/scotbackup/"
     - "/opt/scot/public/cached_images:/opt/scot/public/cached_images/"
    depends_on:
     - perl
     - mongodb
     - activemq
    networks:
     - scot-docker-net
    container_name: scot
    image: sandialabs/scot_scot
  
  perl:
    build: 
      dockerfile: Dockerfile-Perl
      context: ./
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        HTTP_PROXY: ${HTTP_PROXY}
        HTTPS_PROXY: ${HTTPS_PROXY}
    image: sandialabs/scot_perl 
  
  flair:
   build:
     dockerfile: Dockerfile-Flair
     context: ./
   volumes:
    - "/var/log/scot:/var/log/scot/"
    - "/etc/localtime:/etc/localtime:ro"
   depends_on:
    - mongodb
    - activemq
    - scot
   networks:
     - scot-docker-net
   container_name: flair
   image: sandialabs/scot_flair
  
  reflair:
   build:
     dockerfile: Dockerfile-Reflair
     context: ./
   volumes:
    - "/var/log/scot:/var/log/scot/"
    - "/etc/localtime:/etc/localtime:ro"
   depends_on:
    - mongodb
    - activemq
    - scot
   networks:
     - scot-docker-net
   container_name: reflair
   image: sandialabs/scot_reflair

  stretch:
   build:
     dockerfile: Dockerfile-Stretch
     context: ./
   image: scot_stretch
   volumes:
    - "/var/log/scot:/var/log/scot/"
    - "/etc/localtime:/etc/localtime:ro"
   depends_on:
    - mongodb
    - activemq
    - scot
   networks:
    - scot-docker-net
   container_name: stretch
   image: sandialabs/scot_stretch

  game:
   build:
     dockerfile: Dockerfile-Game
     context: ./
   volumes:
    - "/var/log/scot:/var/log/scot/"
    - "/etc/localtime:/etc/localtime:ro"
   depends_on:
    - mongodb
    - scot
   networks:
     - scot-docker-net
   container_name: game
   image: sandialabs/scot_game
# mail: 
#   build:
#     dockerfile: Dockerfile-Mail
#     context: ./
#   volumes: 
#     - "/var/log/scot:/var/log/scot/"
#   depends_on:
#    - mongodb
#    - scot

networks:
  scot-docker-net:
    driver: bridge
