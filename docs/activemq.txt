Documentation for enabling Broker to Broker ActiveMQ and security

Multi-level SCOT with sharing relies on the ActiveMQ queue system to share
data between the SCOT systems.  In this documentaton we will make the following
assumptions:

+---------+                             +--------+
| site01  |                             | hub01  |
|         | --------- SSL ------------> |        | 
| SCOT    |                             | SCOT   |
+---------+                             +--------+

Prepare SSL Certificates
------------------------

on Site01
=========

1.  # keytool -genkey -alias site01 -keyalg RSA -keystore broker.ks

  note: this will prompt you for a password.  Remember this password, you will
        need to put it in your config files.  For this documentation we will
        use "changeit".
  
  note:  you will get a warning message about this making a proprietary key
         store format.  enter the command in the warning to convert to 
         non-proprietary format.

2.  # keytool -export -alias site01 -keystore broker.ks -file site01_cert

  note: you will need to enter the password you used in step 1.

3.  Copy the site01_cert file to hub01:/opt/activemq/conf

on Hub01
========

1.  # keytool -genkey -alias hub01 -keyalg RSA -keystore broker.ks
2.  # keytool -export -alias hub01 -keystore broker.ks -file hub01_cert
3.  Copy hub01_cert to site01:/opt/activemq/conf


On site01
=========

1.  # keytool -import -alias hub01 -keystore broker.ts -file hub01_cert

    note:  you will need to enter the password you used when creating the cert
    note:  select yes when asked to trust certificate

On hub01
=========

1.  # keytool -import -alias site01 -keystore broker.ts -file site01_cert


Configure ActiveMQ
------------------

Add the following to /opt/activemq/conf/activemq.xml before the 
<transportConnectors> section on both systems

    <sslContext>
        <sslContext keyStore="file:${activemq.base}/conf/broker.ks" 
                    keyStorePassword="changeit"
                    trustStore="file:${activemq.base}/conf/broker.ts" 
                    trustStorePassword="changeit"/>
    </sslContext>

add the following transort to <transportConnectors>

    <transportConnector name="ssl" uri="ssl://0.0.0.0:61617?trace=true&amp;transportenabledProtocols=TLSv1,TLSv1.1,TLSv1.2"/>

add the following section for network connectors

        <networkConnectors>
            <networkConnector uri="static://(ssl://hub01:61617)"
                              name="hub_queue_connector"
                              duplex="true">
            </networkConnector>
            <networkConnector uri="static://(ssl://hub01:61617)"
                              name="hub_topic_connector"
                              duplex="true">
            </networkConnector>
        </networkConnectors>

Restart Activmq on both site01 and hub01 and they should be talking to each other via SSL.  (if you start them by /opt/activemq/bin/activemq console, you can see the connections and errors if any)


Bonus: Certificate base authorization


